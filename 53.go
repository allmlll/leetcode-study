package main

func maxSubArray(nums []int) int {
	res := nums[0]
	for i := 1; i < len(nums); i++ {
		if nums[i]+nums[i-1] > nums[i] {
			nums[i] = nums[i] + nums[i-1]
		}
		if nums[i] > res {
			res = nums[i]
		}

	}
	return res
}

//func main() {
//	now := time.Now().UnixNano() / 1e6
//	a := []int{-1, 2, 22, 4, 5, -10, 1, 1, 2, 54, 6, 64, 3, 3, 33, 6, 3, 63, 12123, 36, 36, 6, 4, 756, 74, 63, 63, 5, 25, 24, 124, 12, 42, 5, 345, 3, 53, 53, 53, 5, 35, 35, 3, 5, 12, 12, 3, 214, 13, 423, 4, 23, 4, 324, 23, 42, 35, 23, 534, 5, 34, 6, 5346, 45, 6, 457, 56, 7, 56, 74, 56, 534, 63, 45, 24, 523, 4, 23, 42, 534, 46, 456, 4, 756, 7, 3, 5623, 52, 6, 54, 756, 78, 3, 62, 5, 23, 53, 46, 47, 56, 73, 45, 24, 24, 3645, 785, 67, 34, 5, 3478, 67, 985, 463, 54, 435, 23, 686, 984, 35, 267, 76, 9, 546, 326, 7576, 9, 5436, 34, 9, 7, 6348, 77, 63, 9, 767, 57, 6, 7457, 435, 4, 35, 34, 5, 345, 3, 45, 34, 53, 45, 3, 45 - 345, 3 - 5, 3 - 45, 3, -453 - 4, 53, 53 - 4, 53 - 45, 3 - 45, 3 - 4, 53 - 453 - 45 - 3, 453, 53, -5, 43 - 5, 3, 453, 45, 34, 534, 534, 45, 34, 5634, 645, 67, 567, 567, 56, 75, 7656, 7, 356, 56, 456, 3, 543, 6, 456, 34, 53, 6, 536, 34, 5, 36, 45, 63, 46, 457, 56, 8, 546, 3, 53, 6, 4, 74, 5, 2356, 47, 5, 63, 4656, 7, 356, 45, 74, 63, 674, 56, 36, 45, 647, 457, 56756, 75, 76, 568, 5, 74, 64, 63, 6, 58, 4, 453, 646}
//	array := maxSubArray(a)
//	fmt.Println(array)
//	fmt.Println(time.Now().UnixNano()/1e6 - now)
//
//}
